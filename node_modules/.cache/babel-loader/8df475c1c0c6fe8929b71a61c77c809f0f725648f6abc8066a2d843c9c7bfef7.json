{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport image from \"../../../assets/images/food.jpg\";\nimport \"../../../assets/stylesheets/home/restaurants.css\";\nconst Restaurants = props => {\n  const handleRestaurantClick = async id => {\n    // console.log(`Clicked on restaurant with ID: ${id}`);\n    try {\n      const response = await fetch(`/restaurants/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        // Handle success, if needed\n        console.log('Location selected:', newLocation);\n      } else {\n        // Handle errors, if needed\n        console.error('Error selecting location:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error selecting location:', error.message);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, props.restaurants.map((restaurant, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    onClick: () => handleRestaurantClick(restaurant.id)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categorie_image\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"restaurant_image  \",\n    src: image,\n    alt: \" restaurant\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"restaurant_details\"\n  }, /*#__PURE__*/React.createElement(\"b\", null, \" \", restaurant.name), /*#__PURE__*/React.createElement(\"br\", null), restaurant.spaciality, /*#__PURE__*/React.createElement(\"br\", null), restaurant.area)))))))));\n};\nexport default Restaurants;","map":{"version":3,"names":["React","PropTypes","image","Restaurants","props","handleRestaurantClick","id","response","fetch","method","headers","ok","console","log","newLocation","error","statusText","message","createElement","Fragment","className","restaurants","map","restaurant","index","key","onClick","src","alt","name","spaciality","area"],"sources":["/home/chaithanya/chaithanya/swiggy/app/javascript/components/home/Restaurants.jsx"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport image from \"../../../assets/images/food.jpg\"\nimport \"../../../assets/stylesheets/home/restaurants.css\"\n  \n\nconst Restaurants = (props) => {\n\n  const handleRestaurantClick = async (id) => {\n    // console.log(`Clicked on restaurant with ID: ${id}`);\n    try {\n      const response = await fetch(`/restaurants/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (response.ok) {\n        // Handle success, if needed\n        console.log('Location selected:', newLocation);\n      } else {\n        // Handle errors, if needed\n        console.error('Error selecting location:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error selecting location:', error.message);\n    }\n  };\n  return (\n    <React.Fragment>\n\n      <div> \n        <div className=\"row\">\n          <div className=\"col-4\">\n          <div>\n        {props.restaurants.map((restaurant, index)=>(\n          <div  key={index} onClick={() => handleRestaurantClick(restaurant.id)}>\n          <div className=\"categorie_image\" >\n              <img className=\"restaurant_image  \" src={image} alt=\" restaurant\"/>\n            <div className=\"restaurant_details\">\n              <b> {restaurant.name}</b>\n              <br/>\n              {restaurant.spaciality}\n              <br/>\n              {restaurant.area}\n\n            </div>\n          </div>\n        </div>\n        ))}\n      </div> \n          </div>\n        </div>\n\n      </div>\n\n      {/* */}\n    </React.Fragment>\n  )\n}\n\n\nexport default Restaurants\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAO,kDAAkD;AAGzD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAE7B,MAAMC,qBAAqB,GAAG,MAAOC,EAAE,IAAK;IAC1C;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAeF,EAAG,EAAC,EAAE;QACjDG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,WAAW,CAAC;MAChD,CAAC,MAAM;QACL;QACAF,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAER,QAAQ,CAACS,UAAU,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC3D;EACF,CAAC;EACD,oBACEjB,KAAA,CAAAkB,aAAA,CAAClB,KAAK,CAACmB,QAAQ,qBAEbnB,KAAA,CAAAkB,aAAA,2BACElB,KAAA,CAAAkB,aAAA;IAAKE,SAAS,EAAC;EAAK,gBAClBpB,KAAA,CAAAkB,aAAA;IAAKE,SAAS,EAAC;EAAO,gBACtBpB,KAAA,CAAAkB,aAAA,cACDd,KAAK,CAACiB,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACvCxB,KAAA,CAAAkB,aAAA;IAAMO,GAAG,EAAED,KAAM;IAACE,OAAO,EAAEA,CAAA,KAAMrB,qBAAqB,CAACkB,UAAU,CAACjB,EAAE;EAAE,gBACtEN,KAAA,CAAAkB,aAAA;IAAKE,SAAS,EAAC;EAAiB,gBAC5BpB,KAAA,CAAAkB,aAAA;IAAKE,SAAS,EAAC,oBAAoB;IAACO,GAAG,EAAEzB,KAAM;IAAC0B,GAAG,EAAC;EAAa,CAAC,CAAC,eACrE5B,KAAA,CAAAkB,aAAA;IAAKE,SAAS,EAAC;EAAoB,gBACjCpB,KAAA,CAAAkB,aAAA,YAAG,GAAC,EAACK,UAAU,CAACM,IAAQ,CAAC,eACzB7B,KAAA,CAAAkB,aAAA,WAAI,CAAC,EACJK,UAAU,CAACO,UAAU,eACtB9B,KAAA,CAAAkB,aAAA,WAAI,CAAC,EACJK,UAAU,CAACQ,IAET,CACF,CACF,CACJ,CACE,CACI,CACF,CAEF,CAGS,CAAC;AAErB,CAAC;AAGD,eAAe5B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}