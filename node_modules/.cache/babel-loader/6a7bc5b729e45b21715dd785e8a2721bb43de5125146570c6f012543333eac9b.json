{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst HederMenu = props => {\n  // Use state to manage the selected location\n  const [selectedLocation, setSelectedLocation] = useState('');\n\n  // Use useEffect to fetch and update the list of locations\n  useEffect(() => {\n    // Your logic to fetch locations and update state goes here\n    // For simplicity, I'm using a placeholder array\n    const locations = ['Location1', 'Location2', 'Location3'];\n    setSelectedLocation(locations[0]); // Set the default selected location\n  }, []);\n\n  // debugger\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row header_around\"\n  }, \"lk\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4 location custom-dropdown\"\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedLocation,\n    onChange: e => setSelectedLocation(e.target.value)\n  }, locations.map(location => /*#__PURE__*/React.createElement(\"option\", {\n    key: location,\n    value: location\n  }, location))))), userSignedIn ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sign_in\"\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${currentUserId}`\n  }, currentUserEmail)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout\n  }, \"Log out\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sign_in\"\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign-in\"\n  }, \"Sign in\"))));\n};\nexport default HederMenu;","map":{"version":3,"names":["React","PropTypes","HederMenu","props","selectedLocation","setSelectedLocation","useState","useEffect","locations","createElement","className","value","onChange","e","target","map","location","key","userSignedIn","Fragment","Link","to","currentUserId","currentUserEmail","onClick","handleLogout"],"sources":["/home/chaithanya/chaithanya/swiggy/app/javascript/components/HederMenu.jsx"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst HederMenu = (props) => {\n    // Use state to manage the selected location\n    const [selectedLocation, setSelectedLocation] = useState('');\n\n    // Use useEffect to fetch and update the list of locations\n    useEffect(() => {\n      // Your logic to fetch locations and update state goes here\n      // For simplicity, I'm using a placeholder array\n      const locations = ['Location1', 'Location2', 'Location3'];\n      setSelectedLocation(locations[0]); // Set the default selected location\n    }, []);\n  \n  // debugger\n  return (\n    <div>\n      {/* Header content */}\n      <div className=\"row header_around\">\n        {/* ... Other header content ... */}lk\n        <div className=\"col-sm-4 location custom-dropdown\">\n          {/* Location dropdown */}\n          <select\n            value={selectedLocation}\n            onChange={(e) => setSelectedLocation(e.target.value)}\n          >\n            {/* Map over locations to generate options */}\n            {locations.map((location) => (\n              <option key={location} value={location}>\n                {location}\n              </option>\n            ))}\n          </select>\n        </div>\n        {/* ... Other header content ... */}\n      </div>\n\n      {/* ... Other content ... */}\n\n      {/* Conditionally render user-related content */}\n      {userSignedIn ? (\n        <>\n          {/* User is signed in */}\n          <span className=\"sign_in\">\n            <Link to={`/profile/${currentUserId}`}>{currentUserEmail}</Link>\n          </span>\n          <button onClick={handleLogout}>Log out</button>\n        </>\n      ) : (\n        <>\n          {/* User is not signed in */}\n          <span className=\"sign_in\">\n            <Link to=\"/sign-in\">Sign in</Link>\n          </span>\n        </>\n      )}\n    </div>\n    \n   \n  )\n}\n\n\nexport default HederMenu\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMC,SAAS,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC;IACzDH,mBAAmB,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAER;EACA,oBACER,KAAA,CAAAS,aAAA,2BAEET,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAC;EAAmB,GACI,IACpC,eAAAV,KAAA,CAAAS,aAAA;IAAKC,SAAS,EAAC;EAAmC,gBAEhDV,KAAA,CAAAS,aAAA;IACEE,KAAK,EAAEP,gBAAiB;IACxBQ,QAAQ,EAAGC,CAAC,IAAKR,mBAAmB,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;EAAE,GAGpDH,SAAS,CAACO,GAAG,CAAEC,QAAQ,iBACtBhB,KAAA,CAAAS,aAAA;IAAQQ,GAAG,EAAED,QAAS;IAACL,KAAK,EAAEK;EAAS,GACpCA,QACK,CACT,CACK,CACL,CAEF,CAAC,EAKLE,YAAY,gBACXlB,KAAA,CAAAS,aAAA,CAAAT,KAAA,CAAAmB,QAAA,qBAEEnB,KAAA,CAAAS,aAAA;IAAMC,SAAS,EAAC;EAAS,gBACvBV,KAAA,CAAAS,aAAA,CAACW,IAAI;IAACC,EAAE,EAAG,YAAWC,aAAc;EAAE,GAAEC,gBAAuB,CAC3D,CAAC,eACPvB,KAAA,CAAAS,aAAA;IAAQe,OAAO,EAAEC;EAAa,GAAC,SAAe,CAC9C,CAAC,gBAEHzB,KAAA,CAAAS,aAAA,CAAAT,KAAA,CAAAmB,QAAA,qBAEEnB,KAAA,CAAAS,aAAA;IAAMC,SAAS,EAAC;EAAS,gBACvBV,KAAA,CAAAS,aAAA,CAACW,IAAI;IAACC,EAAE,EAAC;EAAU,GAAC,SAAa,CAC7B,CACN,CAED,CAAC;AAIV,CAAC;AAGD,eAAenB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}